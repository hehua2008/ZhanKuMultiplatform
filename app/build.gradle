plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.kotlinAndroid)
    alias(libs.plugins.kotlinParcelize)
    alias(libs.plugins.kotlinSerialization)
    alias(libs.plugins.ksp)
    alias(libs.plugins.kapt)
    alias(libs.plugins.hilt)
    id("compose.track")
}

android {
    namespace = "com.hym.zhankucompose"
    compileSdk = libs.versions.android.compileSdk.get().toInteger()

    defaultConfig {
        applicationId = "com.hym.zhankucompose"
        minSdk = libs.versions.android.minSdk.get().toInteger()
        targetSdk = libs.versions.android.targetSdk.get().toInteger()
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildFeatures {
        viewBinding = true
        compose = true
    }

    /*
    sourceSets {
        debug {
            java.srcDirs += ["build/generated/data_binding_base_class_source_out/debug/out"]
        }
        release {
            java.srcDirs += ["build/generated/data_binding_base_class_source_out/release/out"]
    }
    }
    */

    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
        }
        release {
            minifyEnabled = true
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(11))
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.composeCompiler.get()
    }

    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

hilt {
    enableAggregatingTask = true
}

kapt {
    correctErrorTypes = true
}

dependencies {
    // kotlin
    implementation(libs.kotlin.stdlib)
    implementation(libs.kotlinx.coroutines.android)
    implementation(libs.kotlinx.collections.immutable)
    implementation(libs.kotlinx.serialization.json)

    // androidx
    implementation(libs.androidx.annotation)
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.fragment.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.lifecycle.viewmodel.ktx)
    implementation(libs.androidx.lifecycle.livedata.ktx)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.swiperefreshlayout)
    implementation(libs.androidx.paging.runtime.ktx)
    implementation(libs.androidx.work.runtime.ktx)

    // androidx media3
    implementation(libs.androidx.media3.exoplayer)
    implementation(libs.androidx.media3.exoplayer.dash)
    implementation(libs.androidx.media3.exoplayer.hls)
    implementation(libs.androidx.media3.exoplayer.rtsp)
    implementation(libs.androidx.media3.ui)

    // squareup
    implementation(libs.squareup.okhttp3.okhttp)
    implementation(libs.squareup.retrofit2.retrofit)
    implementation(libs.squareup.retrofit2.converter.kotlinx.serialization)
    //implementation(libs.squareup.retrofit2.converter.gson)

    // glide
    implementation(libs.glide)
    implementation(libs.glide.recyclerview) {
        transitive = false
    }
    implementation(libs.glide.okhttp3)
    implementation(libs.glide.avif)
    implementation(libs.glide.transformations)
    implementation(libs.gpuimage)
    ksp(libs.glide.ksp)

    // hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.kapt)

    // compose
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.ui.graphics)
    implementation(libs.androidx.compose.ui.tooling.preview)
    implementation(libs.androidx.compose.material3)
    implementation(libs.androidx.paging.compose)
    implementation(libs.androidx.compose.livedata)
    implementation(libs.androidx.constraintlayout.compose)
    implementation(libs.androidx.compose.ui.viewbinding)
    implementation(libs.glide.compose)
    //implementation(libs.compose.markdown)

    // google
    implementation(libs.google.material)
    implementation(libs.google.flexbox)

    // others
    implementation(libs.jsoup)

    // local
    implementation(project(":ssiv:library"))
    implementation(project(":composetrack"))

    // debug
    debugImplementation(project(":logcollector"))
    debugImplementation(libs.squareup.leakcanary.android)

    // debug compose
    debugImplementation(libs.androidx.compose.ui.tooling)
    debugImplementation(libs.androidx.compose.ui.test.manifest)

    // test
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)

    // test compose
    androidTestImplementation(platform(libs.androidx.compose.bom))
    androidTestImplementation(libs.androidx.compose.ui.test.junit4)
}
